<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Getting Started</title>
        <style type="text/css">
            body {
                background-color: #ffffff;
                color: #000000;
                font-size: 10pt;
                font-family: Verdana, "Verdana CE",  Arial, "Arial CE", "Lucida Grande CE", lucida, "Helvetica CE", sans-serif;
            }

        </style>
    </head>
    <body>
        <h2>
            Getting Started with the <i>UQ-iLab-BatchLabServer-Java</i> Project
        </h2>
        <p>
            [GettingStarted.htm - uqlpayne 29 Jan 2013]
        </p>
        <hr />
        <p>
            The files specified here are for the Windows platform but software is also available for the other platforms, e.g., Linux.
        </p>
        <p>
            The versions of the software shown here may not be the latest releases available.
        </p>

        <h3>
            Software
        </h3>
        <ul>
            <li>
                <p>
                    Java Platform (JDK) 7u9 (jdk-7u9-windows-i586.exe)<br />
                    <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a>
                </p>
            </li>
            <li>
                <p>
                    Oracle GlassFish Server 3.1.2.2 (ogs-3.1.2.2-windows.exe)<br />
                    <a href="http://www.oracle.com/technetwork/java/javaee/downloads/index.html">http://www.oracle.com/technetwork/java/javaee/downloads/index.html</a>
                </p>
            </li>
            <li>
                <p>
                    PostgreSQL 9.2 (postgresql-9.2.1-1-windows.exe)<br />
                    <a href="http://www.postgresql.org/download/">http://www.postgresql.org/download/</a>
                </p>
            </li>
        </ul>
        <h3>
            Development Tools
        </h3>
        <ul>
            <li>
                <p>
                    NetBeans IDE 7.2 + Glassfish Development Server 3.1.2 (netbeans-7.2-ml-javaee-windows.exe)<br />
                    <a href="http://netbeans.org/downloads">http://netbeans.org/downloads</a>
                </p>
            </li>
            <li>
                <p>
                    Java SE 7 Documentation (jdk-7u6-apidocs.zip)<br />
                    <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a>
                </p>
            </li>
        </ul>
        <h3>
            Resources
        </h3>
        <ul>
            <li>
                <p>
                    UQ-iLab-BatchLabServer-Java Repository<br />
                    <a href="https://github.com/uqlpayne/UQ-iLab-BatchLabServer-Java">https://github.com/uqlpayne/UQ-iLab-BatchLabServer-Java</a>
                </p>
            </li>
            <li>
                <p>
                    postgresql-9.2-1002.jdbc4.jar<br />
                    <a href="http://jdbc.postgresql.org/">http://jdbc.postgresql.org/</a>
                </p>
            </li>
            <li>
                <p>
                    mail.jar (Rename to <i>javamail-1.4.5.jar</i> after downloading)<br />
                    <a href="http://www.oracle.com/technetwork/java/javamail/index.html">http://www.oracle.com/technetwork/java/javamail/index.html</a>
                </p>
            </li>
        </ul>
        <hr />

        <h3>
            Installation
        </h3>
        <ul>
            <li>
                <p>
                    Download and install the software specified above under the heading <i>Software</i>. These were the
                    latest releases at the time of writing this document.
                </p>
                <p>
                    <b>Note:</b> The <i>Java Platform (JDK)</i> must be installed <u>before</u> the <i>Oracle GlassFish Server</i>.
                </p>
            </li>
            <li>
                <p>
                    If you intend to develop software using the Java source code then download and install the software specified
                    above under the heading <i>Development Tools</i> as well. In this case, the <i>Glassfish Development Server</i>
                    won't be needed because it comes with the <i>NetBeans IDE</i>.
                </p>
            </li>
            <li>
                <p>
                    Download the zip file of the source code from GitHub repository specified above under the heading
                    <i>Resources</i>. Extract the zip file to the folder <i>BatchLabServer</i>.
                </p>
            </li>
            <li>
                <p>
                    Download the PostgreSQL driver and Email jar files specified above under the heading <i>Resources</i>.
                    Place them in the source code folder <i>BatchLabServer/JavaLibraries</i>.
                </p>
            </li>
        </ul>

        <hr />
        <h3>
            Template Project
        </h3>
        <p>
            The <i>Template</i> project consists of four web applications:
        </p>
        <ul>
            <li>
                <p>
                    LabClient - <i>BatchLabServer/Template/LabClient</i>
                </p>
            </li>
            <li>
                <p>
                    LabServer - <i>BatchLabServer/Template/LabServer</i>
                </p>
            </li>
            <li>
                <p>
                    LabEquipment - <i>BatchLabServer/Template/LabEquipment</i>
                </p>
            </li>
            <li>
                <p>
                    ServiceBroker - <i>BatchLabServer/Dummy/ServiceBroker</i>
                </p>
            </li>
        </ul>
        <p>
            The <i>LabServer</i> and <i>ServiceBroker</i> web applications each use a database to store and retrieve information.
        </p>
        <h4>
            LabServer Database
        </h4>
        <ul>
            <li>
                <p>
                    Run the PostgreSQL <i>pgAdmin III</i> program and log in as <i>postgres</i>.
                </p>
            </li>
            <li>
                <p>
                    Create a table with the name <i>Template_LabServer</i>.
                </p>
            </li>
            <li>
                <p>
                    Open each of the following SQL scripts in the source code folder <i>BatchLabServer/Database/PostgreSQL</i> and execute,
                    in order, against the <i>Template_LabServer</i> database.
                </p>
                <ol type="1">
                    <li>
                        <i>LabServer_Tables.sql</i>
                    </li>
                    <li>
                        <i>LabServer_Procedures.sql</i>
                    </li>
                    <li>
                        <i>LabServer_Defaults.sql</i>
                    </li>
                    <li>
                        <i>TemplateLabServer_Defaults.sql</i>
                    </li>
                </ol>
            </li>
            <li>
                <p>
                    Create a new group role with the name <i>LabServerGroup</i>.
                </p>
            </li>
            <li>
                <p>
                    Create a new login role with the name <i>LabServer</i> and password <i>ilab</i>. Give the
                    <i>LabServer</i> login role membership to the <i>LabServerGroup</i> group role.
                </p>
            </li>
            <li>
                <p>
                    Select <i>Tables</i> in the public schema of the database and use the <i>Grant Wizard</i> to give
                    <i>ALL</i> privileges to the <i>LabServerGroup</i> group role. Do the same with <i>Functions</i> and
                    <i>Sequences</i> in the public schema of the database.
                </p>
            </li>
        </ul>

        <h4>
            ServiceBroker Database
        </h4>
        <ul>
            <li>
                <p>
                    Create a table with the name <i>Dummy_ServiceBroker</i>.
                </p>
            </li>
            <li>
                <p>
                    Open each of the following SQL scripts in the source code folder <i>Dummy/Database/PostgreSQL</i>
                    and execute, in order, against the <i>Dummy_ServiceBroker</i> database.
                </p>
                <ol type="1">
                    <li>
                        <i>Experiment_Tables.sql</i>
                    </li>
                    <li>
                        <i>Experiment_Procedures.sql</i>
                    </li>
                </ol>
            </li>
            <li>
                <p>
                    Create a new group role with the name <i>ServiceBrokerGroup</i>.
                </p>
            </li>
            <li>
                <p>
                    Create a new login role with the name <i>ServiceBroker</i> and password <i>ilab</i>. Give the
                    <i>ServiceBroker</i> login role membership to the <i>ServiceBrokerGroup</i> group role.
                </p>
            </li>
            <li>
                <p>
                    Select <i>Tables</i> in the public schema of the database and use the <i>Grant Wizard</i> to give
                    <i>ALL</i> privileges to <i>ServiceBrokerGroup</i>. Do the same with <i>Functions</i> and
                    <i>Sequences</i> in the public schema of the database.

                </p>
            </li>
        </ul>
        <hr />

        <h2>
            Template Project Deployment
        </h2>
        <p>
            Three prebuilt <i>Template_???.war</i> files have been provided in the <i>BatchLabServer/Builds</i> folder
            which can be deployed to the web server running on <i>localhost</i> without modification.
        </p>
        <p>
            Run the GlassFish Server's <i>Admin Console</i> and deploy the following web applications. Select the packaged
            file and specify the <i>Context Root</i> as the context path without the leading forward slash..
        </p>
        <dl>
            <dt>LabClient</dt>
            <dd>
                <table>
                    <tr>
                        <td>Packaged File:</td>
                        <td style="font-style: italic">Template_LabClient.war</td>
                    </tr>
                    <tr>
                        <td>Context Path:</td>
                        <td style="font-style: italic">/TemplateLabClient</td>
                    </tr>
                    <tr>
                        <td>Launch Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/TemplateLabClient/LabClient.do?CouponId=12345&amp;Passkey=qwerty">
                                http://localhost:8080/TemplateLabClient/LabClient.do?CouponId=12345&amp;Passkey=qwerty
                            </a></td>
                    </tr>
                    <tr>
                        <td>Logfile Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/TemplateLabClient/LogFiles/LabClient.log">
                                http://localhost:8080/TemplateLabClient/LogFiles/LabClient.log
                            </a></td>
                    </tr>
                </table>
            </dd>
        </dl>
        <dl>
            <dt>LabServer</dt>
            <dd>
                <table>
                    <tr>
                        <td>Packaged File:</td>
                        <td style="font-style: italic">Template_LabServer.war</td>
                    </tr>
                    <tr>
                        <td>Context Path:</td>
                        <td style="font-style: italic">/TemplateLabServer</td>
                    </tr>
                    <tr>
                        <td>Client Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/TemplateLabServer/index.jsp">
                                http://localhost:8080/TemplateLabServer/index.jsp
                            </a></td>
                    </tr>
                    <tr>
                        <td>Service Url:</td>
                        <td style="font-style: italic">http://localhost:8080/TemplateLabServer/LabServerWebService</td>
                    </tr>
                    <tr>
                        <td>Tester Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/TemplateLabServer/LabServerWebService?Tester">
                                http://localhost:8080/TemplateLabServer/LabServerWebService?Tester
                            </a></td>
                    </tr>
                    <tr>
                        <td>Logfile Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/TemplateLabServer/LogFiles/LabServer.log">
                                http://localhost:8080/TemplateLabServer/LogFiles/LabServer.log
                            </a></td>
                    </tr>
                </table>
            </dd>
        </dl>
        <dl>
            <dt>LabEquipment</dt>
            <dd>
                <table>
                    <tr>
                        <td>Packaged File:</td>
                        <td style="font-style: italic">Template_LabEquipment.war</td>
                    </tr>
                    <tr>
                        <td>Context Path:</td>
                        <td style="font-style: italic">/TemplateLabEquipment</td>
                    </tr>
                    <tr>
                        <td>Service Url:</td>
                        <td style="font-style: italic">http://localhost:8080/TemplateLabEquipment/LabEquipmentService</td>
                    </tr>
                    <tr>
                        <td>Tester Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/TemplateLabEquipment/LabEquipmentService?Tester">
                                http://localhost:8080/TemplateLabEquipment/LabEquipmentService?Tester
                            </a></td>
                    </tr>
                    <tr>
                        <td>Logfile Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/TemplateLabEquipment/LogFiles/LabEquipment.log">
                                http://localhost:8080/TemplateLabEquipment/LogFiles/LabEquipment.log
                            </a></td>
                    </tr>
                </table>
            </dd>
        </dl>
        <dl>
            <dt>ServiceBroker</dt>
            <dd>
                <table>
                    <tr>
                        <td>Packaged File:</td>
                        <td style="font-style: italic">Dummy_ServiceBroker.war</td>
                    </tr>
                    <tr>
                        <td>Context Path:</td>
                        <td style="font-style: italic">/DummyServiceBroker</td>
                    </tr>
                    <tr>
                        <td>Service Url:</td>
                        <td style="font-style: italic">http://localhost:8080/DummyServiceBroker/ServiceBrokerService</td>
                    </tr>
                    <tr>
                        <td>Tester Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/DummyServiceBroker/ServiceBrokerService?Tester">
                                http://localhost:8080/DummyServiceBroker/ServiceBrokerService?Tester
                            </a></td>
                    </tr>
                    <tr>
                        <td>Logfile Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/DummyServiceBroker/LogFiles/ServiceBroker.log">
                                http://localhost:8080/DummyServiceBroker/LogFiles/ServiceBroker.log
                            </a></td>
                    </tr>
                </table>
            </dd>
        </dl>

        <h4>
            Running ...
        </h4>
        <ul>
            <li>
                <p>
                    Open the LabClient Launch Url in a web browser. If all goes well, the title <i>Template</i> should be
                    displayed at the top of the web page and a version number near the top-right of the page.
                </p>
                <p>
                    If all did <u>not</u> go well, see the next section <i>Checking ...</i>
                </p>
                <p>
                    Select the <i>Status</i> menu option to display the experiment status web page. The LabServer Status
                    should be <i>Online</i> and <i>Ready ...</i>.
                </p>
            </li>
            <li>
                <p>
                    To run an experiment, select the <i>Setup</i> menu option to display the experiment setup web page.
                    Select the <i>Setup for Equipment</i> experiment setup. Enter a value for <i>SomeParameter</i> and
                    then click the <i>Submit</i> button. The experiment setup should be successfully submitted and an
                    experiment number presented.
                </p>
                <p>
                    Select the <i>Status</i> menu option to display the experiment status web page. The experiment number
                    should automatically appear in the <i>Experiment Id:</i> input field. Click the <i>Check</i> button to
                    check the status of the experiment repeatedly until the experiment completes.
                </p>
                <p>
                    When the experiment completes, select the <i>Results</i> menu option to display the experiment results
                    web page. The experiment number should automatically appear in the <i>Experiment Id:</i> input field.
                    Click the <i>Retrieve</i> button to retrieve the experiment results.
                </p>
                <p>
                    Save the results to a comma-separated-value (CSV) file by clicking the <i>Save button</i>.
                </p>
            </li>
            <li>
                <p>
                    That's it.
                </p>
            </li>
        </ul>

        <h4>
            Checking ...
        </h4>
        <p>
            The following steps uses the web service tester to launch each of the web services in turn. At each step, the
            log file created by the web service is examined. It is impossible to determine the source of errors that may
            occur without examining the process first-hand so some personal judgment needs to be applied.
        </p>
        <ul>
            <li>
                <p>
                    Open the LabEquipment Tester Url in a web browser and then examine the log file by opening the LabEquipment
                    Logfile Url in a web browser.
                </p>
            </li>
            <li>
                <p>
                    Open the LabServer Tester Url in a web browser and then examine the log file by opening the LabServer
                    Logfile Url in a web browser.
                </p>
            </li>
            <li>
                <p>
                    Open the ServiceBroker Tester Url in a web browser and then examine the log file by opening the
                    ServiceBroker Logfile Url in a web browser.
                </p>
            </li>
            <li>
                <p>
                    Examine the LabClient's log file by opening the LabClient Logfile Url in a web browser.
                </p>
            </li>
        </ul>

        <hr />

        <h2>
            Template Project Development
        </h2>
        <h3>
            Template LabEquipment
        </h3>
        <h4>
            Configuring ...
        </h4>
        <ul>
            <li>
                <p>
                    In the NetBeans IDE, open the <i>LabEquipment</i> web application project in the source code folder
                    <i>BatchLabServer/Template</i> including its required projects.
                </p>
            </li>
            <li>
                <p>
                    In the <i>Template_LabEquipment</i> project, go to the <i>Web Pages/WEB-INF</i> folder and open the
                    <i>ConfigProperties.xml</i> file to see what's in it. A template of this file is provided in the
                    <i>ConfigProperties_template.xml</i> file.
                </p>
                <p>
                    No changes need to be made to the <i>ConfigProperties.xml</i> file at this stage because it already
                    contains the information necessary while working in the development environment.
                </p>
            </li>
            <li>
                <p>
                    Open the <i>web.xml</i> file which is also in the same folder just to see what's in it. No changes need
                    to be made to this file.
                </p>
            </li>
        </ul>

        <h4>
            Running ...
        </h4>
        <ul>
            <li>
                <p>
                    Run the <i>Template_LabEquipment</i> web application project and watch the <i>Output</i> window in
                    the IDE. You should see the project being built, then the GlassFish Server starting and deploying
                    the web application.
                </p>
            </li>
            <li>
                <p>
                    In the <i>Template_LabEquipment</i> project, go to <i>Web Services</i>, right-click
                    <i>LabEquipmentService</i> and select <i>Test Web Service</i>.
                    The <i>LabEquipmentService Web Service Tester</i> page will open in the web browser.
                </p>
                <p>
                    Click the <i>getLabEquipmentStatus</i> button. This will throw an exception but have a look at the
                    <i>Output</i> window in the IDE. You should see logging information showing the LabEquipment service
                    starting and then running.
                </p>
            </li>
            <li>
                <p>
                    An exception was thrown because the web service tester did not provide the LabServer's GUID and passkey.
                </p>
                <p>
                    Open the <i>ConfigProperties.xml</i> file, change the value for the <i>Authenticating</i> key to
                    <i>false</i> and save the file.
                </p>
                <p>
                    Run the <i>Template_LabEquipment</i> web application project again and then run the web service tester
                    again. When the <i>getLabEquipmentStatus</i> button is clicked this time, no exception is thrown.
                    Instead, you will see a <i>SOAP Response</i> showing that the LabEquipment is <i>online</i>.
                </p>
                <p>
                    Open the <i>ConfigProperties.xml</i> file, change the value for the <i>Authenticating</i> key back
                    to <i>true</i> and save the file.
                </p>
            </li>
        </ul>
        <hr />

        <h3>
            Template LabServer
        </h3>
        <h4>
            Configuring ...
        </h4>
        <ul>
            <li>
                <p>
                    In the NetBeans IDE, open the <i>LabServer</i> web application project in the source code folder
                    <i>BatchLabServer/Template</i> including its required projects.
                </p>
            </li>
            <li>
                <p>
                    In the <i>Template_LabServer</i> project, go to the <i>Web Pages/WEB-INF</i> folder and open the
                    <i>ConfigProperties.xml</i> file to see what's in it. A template of this file is provided in the
                    <i>ConfigProperties_template.xml</i> file.
                </p>
                <p>
                    No changes need to be made to the <i>ConfigProperties.xml</i> file at this stage because it already
                    contains the information necessary while working in the development environment.
                </p>
            </li>
            <li>
                <p>
                    Open the <i>web.xml</i> file which is also in the same folder just to see what's in it. No changes need
                    to be made to this file.
                </p>
            </li>
        </ul>

        <h4>
            Running ...
        </h4>
        <ul>
            <li>
                <p>
                    Run the <i>Template_LabServer</i> web application project and watch the <i>Output</i> window in the
                    IDE. You should see the project being built and then the GlassFish Server deploying the web application.
                </p>
            </li>
            <li>
                <p>
                    In the <i>Template_LabServer</i> project, go to <i>Web Services</i>, right-click <i>LabServerWebService</i> and select
                    <i>Test Web Service</i>. The <i>LabServerWebService Web Service Tester</i> page will open in the web browser.
                </p>
                <p>
                    Click the <i>getLabStatus</i> button. This will throw an exception but look at the <i>Output</i> window
                    in the IDE. You should see logging information showing the LabServer service starting and then running.
                </p>
                <p>
                    An exception was thrown because the web service tester did not provide the ServiceBroker's GUID and passkey.
                </p>
            </li>
            <li>
                <p>
                    When the <i>Template_LabServer</i> web application project was run, the LabServer's Home page was opened in the
                    web browser. Log into the LabServer with the username <i>manager</i> and password <i>ilab</i>. This account was
                    created when the <i>LabServer_Defaults.sql</i> database script was executed.
                </p>
            </li>
            <li>
                <p>
                    Click on the <i>Self Registration</i> menu item to display the web page for configuring the LabServer.
                </p>
                <p>
                    When the LabServer completes an experiment, an email can be sent to a specified email address or addresses.
                    Under <i>Optional Information</i>, enter your email address in the <i>Completed Email:</i> and
                    <i>Failed Email:</i> fields. Multiple email addresses can be specified by separating them with a
                    semicolon. No email is sent if no email addresses are specified.
                </p>
                <p>
                    The LabServer's web service can be tested by clicking the <i>Test</i> button. A <i>GetLabStatus</i>
                    web service call is made to the <i>Service Url</i> specified. A message is displayed showing the status
                    of the LabServer and LabEquipment similar to the message displayed on the LabClient's <i>Status</i>
                    page.
                </p>
                <p>
                    The <i>Authenticate</i> checkbox enables ServiceBroker authentication and should remain checked. If
                    unchecked then the <i>Web Service Tester</i> can be used to make a web service call to the LabServer
                    without throwing an exception.
                </p>
            </li>
            <li>
                <p>
                    Click on the <i>Lab Equipment</i> menu item to display the web page for configuring the LabEquipment
                    Service implementations or units. It is possible to configure multiple identical units in a <i>farm</i>
                    to provide load sharing and reduced response times under heavy load. Generally, a LabServer will only
                    use one LabEquipment unit.
                </p>
                <p>
                    In the development environment, it is useful to have multiple LabEquipment units configured and then
                    enable or disable them as required. For example, one LabEquipment unit might be implemented in Java
                    while another is implement in Microsoft .NET. Alternatively, one LabEquipment unit might reside on the
                    local computer and another on a remote server.
                </p>
                <p>
                    The LabEquipment's web service can be tested by clicking the <i>Test</i> button. A <i>GetLabEquipmentStatus</i>
                    web service call is made to the <i>Service Url</i> specified. A message is displayed showing the status
                    of the LabEquipment unit.
                    page.
                </p>
            </li>
            <li>
                <p>
                    Click on the <i>ServiceBrokers</i> menu item to display the web page for configuring ServiceBroker
                    access to this LabServer. There is only one ServiceBroker listed, <i>localhost</i>. The <i>localhost</i>
                    ServiceBroker was the one that allowed the <i>Test</i> butoon on the <i>Self Registration</i>page to
                    get the lab status of the LabServer. If the <i>Allowed</i> checkbox was unchecked then a message
                    would have been displayed stating that LabServer access was denied.
                </p>
            </li>
            <li>
                <p>
                    Click on the <i>My Account</i> menu item to display the web page for the LabServer Manager's user
                    information. Only one user account exists and cannot be deleted although all information other than
                    the username can be changed.
                </p>
                <p>
                    It is advisable to change the password particularly if the LabServer is deployed outside of the
                    development environment.
                </p>
            </li>
            <li>
                <p>
                    Click on the <i>Logout </i> menu item to log out of the LabServer.
                </p>
            </li>
        </ul>
        <hr />

        <h3>
            Dummy ServiceBroker
        </h3>
        <h4>
            Configuring ...
        </h4>
        <ul>
            <li>
                <p>
                    In the NetBeans IDE, open the <i>ServiceBroker</i> web application project in the source code folder
                    <i>BatchLabServer/Dummy</i> including its required projects.
                </p>
            </li>
            <li>
                <p>
                    In the <i>Dummy_ServiceBroker</i> project, go to the <i>WEB-INF</i> folder and open the
                    <i>ConfigProperties.xml</i> file to see what's in it. There is no template of this file provided.
                </p>
                <p>
                    No changes need to be made to the <i>ConfigProperties.xml</i> file.
                </p>
                <p>
                    <b>Note:</b> A GUID has already been provided for the ServiceBroker and is for use in the development
                    environment only. This ServiceBroker simply provides pass-through methods to allow the LabClient to
                    communicate with the LabServer. It will not be deployed to an application web server.
                </p>
                <p>
                    There are three LabServers configured for the ServiceBroker. Each must have a different GUID and
                    WebService Url. <i>LabServer0</i> is configured for a Microsoft .NET implementation hence the non-Java
                    WebService Url.
                </p>
            </li>
            <li>
                <p>
                    Open the <i>web.xml</i> file which is also in the same folder just to see what's in it. No changes need
                    to be made to this file.
                </p>
            </li>
        </ul>

        <h4>
            Running ...
        </h4>
        <ul>
            <li>
                <p>
                    Run the <i>Dummy_ServiceBroker</i> web application project and watch the <i>Output</i> window in the
                    IDE. You should see the project being built and then the GlassFish Server deploying the web application.
                </p>
            </li>
            <li>
                <p>
                    In the <i>Dummy_ServiceBroker</i> project, go to <i>Web Services</i>, right-click <i>ServiceBrokerService</i>
                    and select <i>Test Web Service</i>. The <i>ServiceBrokerService Web Service Tester</i> page will open
                    in the web browser.
                </p>
                <p>
                    Click the <i>getLabStatus</i> button. This will throw an exception but have a look at the <i>Output</i> window
                    in the IDE. You should see logging information showing the ServiceBroker service starting and then running.
                </p>
            </li>
            <li>
                <p>
                    An exception was thrown because the web service tester did not provide the LabClient's coupon Id and
                    coupon passkey.
                </p>
                <p>
                    Open the <i>ConfigProperties.xml</i> file, change the value for the <i>Authenticating</i> key to <i>false</i>
                    and save the file.
                </p>
                <p>
                    Run the <i>Dummy_ServiceBroker</i> web application project again and then run the web service tester
                    again. When the <i>getLabStatus</i> button is clicked this time, an exception is thrown again. But this
                    time, it is because the LabServer's GUID was not provided in the parameter input box beside the button.
                </p>
                <p>
                    Copy the LabServer's GUID from <i>LabServer1</i> (TemplateLabServer) in the <i>ConfigProperties.xml</i>
                    file and paste into the parameter input box beside the <i>getLabStatus</i> button.
                </p>
                <p>
                    Click the <i>getLabStatus</i> button. You will see a <i>SOAP Response</i> showing that the LabServer
                    is <i>online</i>.
                </p>
            </li>
            <li>
                <p>
                    Open the <i>ConfigProperties.xml</i> file, change the value for the <i>Authenticating</i> key back to
                    <i>true</i> and save the file. Run the <i>Dummy_ServiceBroker</i> web application project again.
                </p>
            </li>
        </ul>
        <hr />

        <h3>
            Template LabClient
        </h3>
        <h4>
            Configuring ...
        </h4>
        <ul>
            <li>
                <p>
                    In the NetBeans IDE, open the <i>LabClient</i> web application project in the source code folder
                    <i>BatchLabServer/Template</i> including its required projects.
                </p>
            </li>
            <li>
                <p>
                    In the <i>Template_LabClient</i> project, go to the <i>Web Pages/WEB-INF</i> folder and open the
                    <i>ConfigProperties.xml</i> file to see what's in it. A template of this file is provided in the
                    <i>ConfigProperties_template.xml</i> file.
                </p>
                <p>
                    No changes need to be made to the <i>ConfigProperties.xml</i> file.
                </p>
            </li>
            <li>
                <p>
                    Open the <i>web.xml</i> file which is also in the same folder just to see what's in it. No changes need
                    to be made to this file.
                </p>
            </li>
            <li>
                <p>
                    Open the <i>Properties</i> dialog window for the <i>Template_LabClient</i> project and select the <i>Run</i>
                    category. Check that the following <i>Relative URL:</i> is specified:
                </p>
                <p>
                    <code>/LabClient.do?CouponId=12345&amp;Passkey=qwerty</code>
                </p>
                <p>
                    The URL request parameters provide the coupon Id and coupon passkey required by the Dummy ServiceBroker.
                    A real ServiceBroker provides these request parameters (with different values) when it launches the
                    LabClient.
                </p>
                <p>
                    If values for <i>ServiceUrl</i>, <i>LabServerId</i>, or <i>MultiSubmit</i> are specified in the URL
                    request parameters along with <i>CouponId</i> and <i>Passkey</i>, these override the values set in
                    the <i>ConfigProperties.xml</i> file. This way, multiple ServiceBrokers can launch the same LabClient
                    but with different parameters.
                </p>
            </li>
        </ul>

        <h4>
            Running ...
        </h4>
        <ul>
            <li>
                <p>
                    Run the <i>Template_LabClient</i> web application project and watch the <i>Output</i> window in the
                    IDE. You should see the project being built and then the GlassFish Server deploying the web application.
                </p>
            </li>
            <li>
                <p>
                    The LabClient's Home page is opened in the web browser. If all is well, you should see the title
                    <i>Template</i> at the top of the page and a version number near the top-right of the page.
                </p>
            </li>
            <li>
                <p>
                    Click on the <i>Status</i> menu item to display the web page for LabServer's status which should be
                    <i>Online</i>.
                </p>
            </li>
            <li>
                <p>
                    Click on the <i>Setup</i> menu item to display the web page for specifying the experiment setup to
                    run on the LabServer.
                </p>
                <p>
                    For the <i>Setup</i>, select <i>Setup for Equipment</i>. Enter the value <i>500</i> in the input box
                    next to <i>SomeParameter</i> and click the <i>Validate button</i>. A message is displayed stating
                    that the experiment specification valid and will take 22 seconds to execute.
                </p>
                <p>
                    Click the <i>Submit</i> button to submit this experiment specification to the LabServer. A message
                    is displayed stating that the submission was successful and the experiment number.
                </p>
            </li>
            <li>
                <p>
                    Click on the <i>Status</i> menu item to display the web page for the experiment status. Enter the
                    experiment number in the input box next to <i>Experiment Id</i> (if the number is not already there)
                    and click the <i>Check</i> button. A message is displayed showing the status of the experiment.
                </p>
                <p>
                    Periodically click the <i>Check</i> button until the experiment has completed.
                </p>
            </li>
            <li>
                <p>
                    Click on the <i>Results</i> menu item to display the web page for the experiment results. Enter the
                    experiment number in the input box next to <i>Experiment Id</i> (if the number is not already there)
                    and click the <i>Retrieve</i> button. A message is displayed showing the status of the experiment.
                </p>
                <p>
                    Also displayed is the information about the experiment including the experiment setup and experiment
                    results. The result for this experiment is shown as <i>SomeResult</i> and will be a randomly-generated
                    number in the range of 0 to 500.
                </p>
            </li>
            <li>
                <p>
                    The results can be saved to a comma-separated-value (CSV) file by clicking the <i>Save button</i>.
                </p>
            </li>
        </ul>
        <hr />

        <h3>
            The End
        </h3>
        <ul>
            <li>
                <p>
                    Hopefully, this document has provided sufficient information to help get you started with the
                    <i>UQ-iLab-BatchLabServer-Java</i> project.
                </p>
            </li>
            <li>
                <p>
                    Try out the <i>Radioactivity</i> project next but you may want to undeploy the <i>Template</i> project first.
                    You will still need the Dummy ServiceBroker though.
                </p>
                <p>
                    The <i>Radioactivity</i> LabServer does not drive real hardware but does provide the simulation setups as used
                    by the real Radioactivity LabServer running at the University of Queensland, Australia.
                    See: <a href="http://openilabs.ilab.uq.edu.au/ServiceBroker/">http://openilabs.ilab.uq.edu.au/ServiceBroker/</a>
                </p>
            </li>
        </ul>
        <hr />

        <h2>
            Radioactivity Project Deployment
        </h2>
        <p>
            If you want to try out the Radioactivity project, deploy the three prebuilt <i>Radioactivity_???.war</i>
            files that have been provided in the <i>BatchLabServer/Builds</i> folder. You will also need the
            <i>RadioactivityLabServer_Defaults.sql</i> provided in the <i>BatchLabServer/Database/PostgreSQL</i> folder
            and run it instead of <i>TemplateLabServer_Defaults.sql</i> for the Template project.
        </p>
        <p>
            Run the GlassFish Server's <i>Admin Console</i> and deploy the following web applications. Select the packaged
            file and specify the <i>Context Root</i> as the context path without the leading forward slash..
        </p>
        <dl>
            <dt>LabClient</dt>
            <dd>
                <table>
                    <tr>
                        <td>Packaged File:</td>
                        <td style="font-style: italic">Radioactivity_LabClient.war</td>
                    </tr>
                    <tr>
                        <td>Context Path:</td>
                        <td style="font-style: italic">/RadioactivityLabClient</td>
                    </tr>
                    <tr>
                        <td>Launch Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/RadioactivityLabClient/LabClient.do?CouponId=12345&amp;Passkey=qwerty">
                                http://localhost:8080/RadioactivityLabClient/LabClient.do?CouponId=12345&amp;Passkey=qwerty
                            </a></td>
                    </tr>
                    <tr>
                        <td>Logfile Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/RadioactivityLabClient/LogFiles/LabClient.log">
                                http://localhost:8080/RadioactivityLabClient/LogFiles/LabClient.log
                            </a></td>
                    </tr>
                </table>
            </dd>
        </dl>
        <dl>
            <dt>LabServer</dt>
            <dd>
                <table>
                    <tr>
                        <td>Packaged File:</td>
                        <td style="font-style: italic">Radioactivity_LabServer.war</td>
                    </tr>
                    <tr>
                        <td>Context Path:</td>
                        <td style="font-style: italic">/RadioactivityLabServer</td>
                    </tr>
                    <tr>
                        <td>Client Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/RadioactivityLabServer/index.jsp">
                                http://localhost:8080/RadioactivityLabServer/index.jsp
                            </a></td>
                    </tr>
                    <tr>
                        <td>Service Url:</td>
                        <td style="font-style: italic">http://localhost:8080/RadioactivityLabServer/LabServerWebService</td>
                    </tr>
                    <tr>
                        <td>Tester Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/RadioactivityLabServer/LabServerWebService?Tester">
                                http://localhost:8080/RadioactivityLabServer/LabServerWebService?Tester
                            </a></td>
                    </tr>
                    <tr>
                        <td>Logfile Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/RadioactivityLabServer/LogFiles/LabServer.log">
                                http://localhost:8080/RadioactivityLabServer/LogFiles/LabServer.log
                            </a></td>
                    </tr>
                </table>
            </dd>
        </dl>
        <dl>
            <dt>LabEquipment</dt>
            <dd>
                <table>
                    <tr>
                        <td>Packaged File:</td>
                        <td style="font-style: italic">Radioactivity_LabEquipment.war</td>
                    </tr>
                    <tr>
                        <td>Context Path:</td>
                        <td style="font-style: italic">/RadioactivityLabEquipment</td>
                    </tr>
                    <tr>
                        <td>Service Url:</td>
                        <td style="font-style: italic">http://localhost:8080/RadioactivityLabEquipment/LabEquipmentService</td>
                    </tr>
                    <tr>
                        <td>Tester Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/RadioactivityLabEquipment/LabEquipmentService?Tester">
                                http://localhost:8080/RadioactivityLabEquipment/LabEquipmentService?Tester
                            </a></td>
                    </tr>
                    <tr>
                        <td>Logfile Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/RadioactivityLabEquipment/LogFiles/LabEquipment.log">
                                http://localhost:8080/RadioactivityLabEquipment/LogFiles/LabEquipment.log
                            </a></td>
                    </tr>
                </table>
            </dd>
        </dl>
        <dl>
            <dt>ServiceBroker</dt>
            <dd>
                <table>
                    <tr>
                        <td>Packaged File:</td>
                        <td style="font-style: italic">Dummy_ServiceBroker.war</td>
                    </tr>
                    <tr>
                        <td>Context Path:</td>
                        <td style="font-style: italic">/DummyServiceBroker</td>
                    </tr>
                    <tr>
                        <td>Service Url:</td>
                        <td style="font-style: italic">http://localhost:8080/DummyServiceBroker/ServiceBrokerService</td>
                    </tr>
                    <tr>
                        <td>Tester Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/DummyServiceBroker/ServiceBrokerService?Tester">
                                http://localhost:8080/DummyServiceBroker/ServiceBrokerService?Tester
                            </a></td>
                    </tr>
                    <tr>
                        <td>Logfile Url:</td>
                        <td style="font-style: italic"><a href="http://localhost:8080/DummyServiceBroker/LogFiles/ServiceBroker.log">
                                http://localhost:8080/DummyServiceBroker/LogFiles/ServiceBroker.log
                            </a></td>
                    </tr>
                </table>
            </dd>
        </dl>
        <p>
            &nbsp;
        </p>
    </body>
</html>
